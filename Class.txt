
# Linux Basics 

Connection Timeout vs  Connection Refused 

Timeout: Firewall is stopping the request
Refused: Request is received at the server, but server is rejecting the request

Vertical Scaling: Means adding resources to the same server. Vertical Scaling always involves downtime.

cd vs pwd 

cd ..  ( move one step back )
pwd : displays present working directory

# mkdir dirName


Servers are created to run applications.
Servers will be accessed by Developers, QA, DevOps, SecOps, Seucity Team from the company 
Each and every user need to have an account in the system.

In linux, `root` is the first user account creates in the system and the ID of it 0
We can create a maximum of 65535 user accounts and out which 0 to 999 are system accounts, created and managed by system for a specific job.

# cat vs tac 

> Use Cases of reading file: 
1) Reading the file.
2) Reading file in the reverse order.
3) How to read from the top 5 lines of a file.
4) How to read from the bottom 5 lines of a file.
5) How to read the file from line 5 to 8.
6) How to read a specific portion or fields of a file.
7) How to print line number x and y 

# head & tail 
> head reads the top 10 lines of a file
> tail reads the last 10 lines of a file 

# sed : streamline editor
    `$ sed -n -e '8,13 p' /etc/passwd`
    `$ sed -n -e '2 p' -e '5 p' /etc/passwd`

# cut: field separator tool
    `cut -d : -f1 /etc/passwd`
# Prints field 1 and 4 from the mentioned file with : as delimited
    `$ cut -d : -f1,4 /etc/passwd`
# prints 1 to 4 fields from the file:
    `$ cut -d : -f1-4 /etc/passwd`

# How to read, cp, rm, mv of a file. How to edit a file ?
vi fileName 
vim fileName

> Editing a file on linux starts with understand the modes of editor.

w: write ( save )
q: quit 
wq! : Save and quit 

> When you write something on the file, but don't want to save it and in this case,
:q!

# Directory Structure In Linux

# curl: client url : Like a Browser on linux
    using curl, you can read / download files from the internet.
    `$ curl url`

# wget: to download files from the internet 
    `$ wget URL`

>  Tar, pipe, patching & user management on linux...
==========================================================================================
Agenda: 
    * Run Levels in linux 
    * Process Management In linux 
    * Network management in linux 
    * User Managment 
    * Permissions 
    * Patch Management 
    * Service Management

Run Level in linux: 
    0 : Shutdown's the server 
    1 : Starts the server in a single user mode 
    2 : Starts the server in multi-user mode but network ( nfs ) won't be coming 
    3 : This starts the system in multi-user mode with network ( Efficient and widely used )
    4 : This is for R&D, not for users purpose. 
    5 : This also starts your server in a multi-user mode, but starts the server along with GUI
    6 : Reboot

$ df -h 
$ df -Th
$ du -h fileName

> Pipes ( | ):
    Pipes helps in converting the output of first command as an input to the second command 

        $ ls -ltr | grep passwd

> sudo: gives the user temporary root privileges to execute the specific command as a root user.

> Process Management:
    All the actions would be running in the backend as a process which does the job.

$ top   //This is a task manager like interactive mention, we won't use
$ ps   //This is not an interactive but the result is static and are related only to that session
$ ps -e   //Shows every process in the system
$ ps -ef  //In detailed process
$ ps -u   //process associated with current user only

> Load Average
    `Ex: load average: 0.07, 0.05, 0.02`
    In Linux, "load average" refers to a metric that indicates the average number of processes that are either currently running on the CPU or waiting to be executed, essentially showing how heavily the CPU is being utilized over a specific period of time (usually 1, 5, and 15 minutes). 

$ kill: command to kill a specific process id 
    $ kill pID     [ Will terminate the process by updating the system ]
    $ kill -9 pID  [ Forcefull kills a process ]

> User Management: 
    By default each and every will be part of his own group 
    We can create a maximum of 65535 users on a linux server
    root is the first user account created on the linux server
    Each and every user in linux will have a UID and root user's uid is 0

    AAA
        Authentication 
        Authorization
        Auditing
    
    How to create a user account ?
    What is a group account ?
    How to create a group account ?
    How to add a user to a group account ?
    How can groups can a user be a part ?

> How to switch from one user account to another user account ?
    su: switch user
    su - : switch user along with this directory

> Not everyone is the system can execute the commands with `sudo` !!!!!
    How can we give a specific group permissions to sudo ?
        /etc/sudoer
        devops : createUser accounts ( for sudo )
        ===================================================================================

# Package Management In Linux 

    What is a package ? Package is noting but a software.
    Linux as a kernal + os comes very basic, based on your needs we are going to install the needed packages on the system.
    Like any other system, even linux get updates very frequently. So, as per the org policy we need to patch / update them on a monthly / quarterly basis.

    What is need of an update to an OS or Software or Update ? 
        > Update brings you additional feature and strenghten's the software.
        > Pathces sometimes offer better performance.
    
    How to update or what are the package management tools on linux ?

        yum , dnf,     ( Redhat / Centos )
        apt , apt-get  ( Ubuntu)

        Redhat 7 , YUM is the package managed
        From Redhat 8, YUM & DNF ( dnf is the latest package manager )

> sudo yum list installed : Shows the packages thar are installed on the server
> sudo yum list available : Shows the packages thar are available in the interner for our particular OS
> How to install , remove or update a package ?

```
    # yum install packageName or dnf install packageName 
    $ yum remove packageName or  dnf remove packageName
    $ yum update packageName or dnf update packageName
    $ sudo dnf update --exclude=java* 
    $ sudo dnf update --exclude=kernel*
    How to search for the available versions ?
     $ sudo dnf search openjdk
     $ sudo dnf install java-1.8.0-openjdk
    Installing packages from file with the packageNames mentioned
     $ sudo dnf install $(cat package.txt)
    
```
Packages on redghat linux can be installed in 3 ways 

    1) Package Manager ( yum or dns ) : Along with the needed package, all the pre-requisites are covered by the package manager 
    2) RPM Files ( Downthe rpm's and install them): You're responsible for all the packages that are needed for the package you're installing
    3) Code Baesd installation ( npm install , go mod ) 

> Service Management

    Job: A job is nothing but a task, that runs and goes for a completion. 
    Service: This is nothing but a process that continuously waits for some task, even after the completion of the process, it still waits for the next process. 
        Example: ssh, ftp, smtp
    
    # systemctl status serviceName
    # systemctl stop serviceName
    # systemctl restart serviceName
    # systemctl daemon-reload
    # systemctl list-units -t service
    # netstat -tulpn

> Future Scope
Our machine's won't have public ip
you cannot access or ssh these vm's from Internet
But these machines can talk to the Internet ( NAT )
======================================================================================

# Permissions on linux 

> Agenda: 
    * Permissions
    * Project ( 3-tier architecture )

 Read: 4 : r 
 Write: 2 : w
 Execute: 1: x
 
## chmod 750 fileName 
## chmod -R 750 dirName/   [[ To change recirsively ]]

## chown  owner:group fileName
## chown  -R owner:group dir/  [[ To change recirsively ]]
==================================================================================

What is web application ?
What is Monolithic Application ?
Standards that we follow in this training.
We will implement all our componets of the the project on t3.small spot servers.
All the servers are expected ti have 59-allow-all security group that allow's all ports from the internet on the servers.

What is a 3-tier architecture ?

Famous Frontend Development Technologies are: 
    html
    flutter
    angularjs


Famous Backend or App Development Technologies are: 
    Java
    Python
    Go
    Nodejs

In IT 99% of the times, issues will come up due to version compatability.

Always remember, when an application is dependent on Database, make sure the Database comes first and then applicaiton. If not, application looks for the database and won't start.

Proxy vs Reverse Proxy:
Purpose of reverser proxy:
    1) Hides the true identity of the needed servers
    2) Sends the reqeusts to the backend servers with confidentaility.
    3) Webservers have the capability to reverse proxy
    4) Typically Frontend will reverse proxy the backend servers

Applications are always supposed to be configured wtih service-accounts or non-human accounts

Assignment: 
    1) SQL DB vs NoSQL DB 
    2) What is Column DB
    3) What is Queue Manager

Status Codes ( Start Tomorrow )

HTTP Status Codes

telnet: This is a tool that helps in checking the connectiviy from the source to destination 

    I want to check whether my backend can talk to mysql or not [ mysql works on 3306 ]

        backend $ telnet destinationIP portNumber 
        backend $ telnet mysqlIP 3306

============================================================================
How we develop code locally ? Where do we publish it ?

GIT: Client based verison control system installed on computer or server

GitHub / GitLab / BitBucket: Centralized Version Control System

Git Flow
Computer to GitHub Authentication

If you're using Windows:
    1) GITBASH ( Install GitBash, this offers Git Client and terminal )
       > Click on windows button, click Git Bash and this opens the terminal for you.
    2) VS Code
        > Download and install it, once it's installed, just click on VSCode to open.

If you're using MacBook / Linux:
    1) Just install git ( Open your terminal : "$ brew install git" )
    2) Install VSCode for Mac

Once you install the VSCode, make sure to enable the "AUTO SAVE Option" on FILE and this saves all changes automatically.

GitHub Action is the CI/CD Framework which can learnt for free on GitHub, if your repositories are under an ORG and they are free.

Understand these terms:
    $ git clone repoName : This means downloading the whole repo to your local ( If the repo is public , it won't challenges with userName and password )
    $ git push : Once you made a clone, if you made some changes, we publish those changes back to the central repo 
    $ git pull : If there are some changes on the git repo, to download those changes, we use "git pull" 
    $ git commit -m "Standard Msg" : This is to give some message to the changes that you make 

# Wheneven want to push your changes, here are the steps to be followed 

    1) git add fileName-that's-changes or simply "git add ." this includes all the files in your directory
    2) git commit -m "EXP-APP-7: Updated the session-14 file"
    3) git push

Git HUB Uses PAT for authentication ( PAT: Personal Access Token )

If the repo is public:  
    1) You can clone the code without the need of credentails 
    2) If you want to push the code to the repo, you need to prove that repo is owned by you, by filling your credentials 

If the repo is private:  
    1) You can clone the code but need credentails 
    2) If you want to push the code to the repo, you need to prove that repo is owned by you, by filling your credentials 

VSCode Command To Open a Folder In VSCODE:
    $ code folderName

> Later: Code Review, Branching Strategy, Pull Reqeust

One time work:
    1) Singup github and create a org and repo's as needed under this 
    2) Clone the needed repo to batch59/ using git clone repoName 

Continuous Work:
    1) Develop locally 
    2) Publish the changes to gitHub 
    3) Pull the changes on server as needed 
    4) Test them as needed
==========================================================================================